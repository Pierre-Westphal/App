services:
  front:
    build: ./front
    restart: always
    ports:
      - 3000:3000
    image: front_i
    container_name: front
    stdin_open: true
    volumes:
      - ./front/node_modules:/front/node_modules
      - ./front:/front
    networks:
      - my_network

  api:
    build: ./api
    volumes:
      - ./api:/api
    command: uvicorn main:app --reload --host 0.0.0.0
    restart: always
    hostname: 0.0.0.0
    environment:
      SSO_ADMIN_USERNAME: admin
      SSO_ADMIN_PASSWORD: admin
      SSO_URL: http://keycloak-server:8080/
      SSO_REALM: local
      SSO_CLIENT_ID: client
      WWW_URL: http://localhost:3000
      DATABASE_URL: postgresql://admin:admin@keycloak-db:5432/admin
    ports:
      - 8000:8000
    image: api_i
    container_name: api
    stdin_open: true
    depends_on:
      - db
      - keycloak-server
      - keycloak-db
    networks:
      - my_network

  db:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - 'postgres:/var/lib/postgresql/data'
    environment:
      POSTGRES_USER: 'admin'
      POSTGRES_PASSWORD: 'admin'
      POSTGRES_DB: 'admin'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d admin"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - my_network

  keycloak-server:
    build: ./sso
    ports:
      - 8080:8080
      - 8443:8443
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - DB_ADDR=keycloak-db
      - DB_PORT=5432
      - DB_DATABASE=keycloak
      - DB_SCHEMA=keycloak
      - DB_USER=admin
      - DB_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-db/keycloak
      - KC_DB_USERNAME=admin
      - KC_DB_PASSWORD=admin
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
      - KC_HOSTNAME_STRICT_BACKCHANNEL=false
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT_HTTPS=false
      - PROXY_ADDRESS_FORWARDING=true
    depends_on:
      keycloak-db:
        condition: service_healthy
    networks:
      - my_network

  keycloak-db:
    image: postgres:16
    ports:
      - 5433:5432
    volumes:
      - 'postgres_keycloak_db:/var/lib/postgresql/data'
    environment:
      POSTGRES_USER: 'admin'
      POSTGRES_PASSWORD: 'admin'
      POSTGRES_DB: 'keycloak'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d keycloak"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - my_network

  nginx-proxy:
    image: nginx
    ports:
      - "8088:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - my_network
    depends_on:
      - api
      - front
      - keycloak-server

volumes:
  postgres_keycloak_db:
    driver: local
  postgres:
    driver: local

networks:
  my_network:
    driver: bridge